service: cqrs-test

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: false
    packager: 'yarn'
    excludeFiles: src/**/*.test.ts
  configFile: ${file(.env.${opt:stage, 'dev'}.yml):}

provider:
  name: aws
  runtime: nodejs18.x
  architecture: arm64
  stage: ${self:custom.configFile.STAGE}
  region: ${self:custom.configFile.REGION}
  environment:
    STAGE: ${self:custom.configFile.STAGE}

functions:
  createOrder:
    handler: src/adapters/http/createOrder/createOrder.handler
    environment:
      ORDER_TABLE: !Ref OrderTable
    events:
      - http:
          path: orders
          method: post
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:Query
        Resource: !GetAtt OrderTable.Arn
  createProduct:
    handler: src/adapters/http/createProduct/createProduct.handler
    environment:
      PRODUCT_TABLE: !Ref ProductTable
    events:
      - http:
          path: products
          method: post
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt ProductTable.Arn
  addProductToOrder:
    handler: src/adapters/http/addProductToOrder/addProductToOrder.handler
    environment:
      ORDER_TABLE: !Ref OrderTable
    events:
      - http:
          path: orders/{id}/addProduct
          method: put
          request: 
            parameters: 
              paths: 
                id: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:Query
        Resource: !GetAtt OrderTable.Arn


resources:
  - ${file(src/adapters/database/database.yml)}